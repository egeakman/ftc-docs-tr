# SOME DESCRIPTIVE TITLE.
# Copyright (C) FIRST
# This file is distributed under the same license as the FIRST Tech Challenge Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Tech Challenge Docs 0.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-20 03:04+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:2
msgid "TensorFlow for FREIGHT FRENZY presented by Raytheon Technologies"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:5
msgid "What is TensorFlow?"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:7
msgid "*FIRST* Tech Challenge teams can use `TensorFlow Lite <https://www.tensorflow.org/lite/>`__, a lightweight version of Google’s `TensorFlow <https://www.tensorflow.org/>`__ machine learning technology that is designed to run on mobile devices such as an Android smartphone. A *trained TensorFlow model* was developed to recognize game elements for the 2021-2022 Freight Frenzy challenge."
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:19
msgid "TFOD Cube Duck"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:19
msgid "This season’s TFOD model can recognize Freight elements"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:21
msgid "TensorFlow Object Detection (TFOD) has been integrated into the control system software, to identify and track these game pieces during a match. The software (SDK version 7.0) contains TFOD Sample Op Modes that can recognize the Freight elements Duck, Box (or Cube), and Cargo (or Ball)."
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:27
msgid "Also, teams can use a new tool to train their own TFOD models, to recognize their custom Team Shipping Element (TSE) and/or to improve recognition of Freight elements. This training could take into account certain conditions of distance, angle, lighting and background."
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:32
msgid "This new tool is the **Machine Learning Toolchain**, `announced 10/7/2021 <http://firsttechchallenge.blogspot.com/2021/10/new-machine-learning-tool-beta-testing.html>`__. Learn more at these links: `[forum] <https://ftc-community.firstinspires.org/>`__ :doc:`[manual] <../../../ftc_ml/index>`"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:38
msgid "How Might a Team Use TensorFlow in Freight Frenzy?"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:40
msgid "For this season’s challenge, during the pre-Match stage a single die is rolled and the field is randomized."
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:47
msgid "Barcode"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:47
msgid "Randomization"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:50
msgid "At the beginning of the match’s Autonomous period, a robot can use TensorFlow to “look” at the **Barcode** area and determine whether the Duck or optional Team Shipping Element (TSE) is in position 1, 2 or 3. This indicates the preferred scoring level on the **Alliance Shipping Hub**. A bonus is available for using the TSE instead of a Duck."
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:61
msgid "Levels"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:61
msgid "Alliance Shipping Hub"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:64
msgid "Important Note on Phone Compatibility"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:66
msgid "TensorFlow Lite runs on Android 6.0 (Marshmallow) or higher, a requirement met by all currently allowed devices. If you are a Blocks programmer using an older/disallowed Android device that is not running Marshmallow or higher, TFOD Blocks will automatically be missing from the Blocks toolbox or design palette."
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:73
msgid "Sample Op Modes"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:75
msgid "The software (SDK version 7.0 and higher) contains sample Blocks and Java op modes that demonstrate TensorFlow **recognition** of Freight elements Duck, Box (cube) and Cargo (ball). The sample op modes also show **where** in the camera’s field of view a detected object is located."
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:81
msgid "Click on the following links to learn more about these sample Op Modes."
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:83
msgid ":ref:`Blocks TensorFlow Object Detection Example <programming_resources/vision/blocks_tfod_opmode/blocks-tfod-opmode:blocks sample opmode for tfod>`"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:85
msgid ":ref:`Java TensorFlow Object Detection Example <programming_resources/vision/java_tfod_opmode/java-tfod-opmode:Java Easy Sample OpMode for TFOD>`"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:89
msgid "Using a Custom Inference Model"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:91
msgid "Teams have the option of using a custom inference model with the FIRST Tech Challenge software. As noted above, the **Machine Learning toolchain** is a streamlined tool for training your own TFOD models. An alternate would be to use the `TensorFlow Object Detection API <https://github.com/tensorflow/models/tree/master/research/object_detection>`__ to create an enhanced model of the Freight elements or TSE, or to create a custom model to detect other entirely different objects. Other teams might also want to use an available pre-trained model to build a robot that can detect common everyday objects (for demo or outreach purposes, for example)."
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:102
msgid "The software includes sample op modes (Blocks and Java versions) that demonstrate how to use a **custom inference model**:"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:105
msgid "`Using a Custom TensorFlow Model with Blocks <https://github.com/FIRST-Tech-Challenge/FtcRobotController/wiki/Using-a-Custom-TensorFlow-Model-with-Blocks>`__"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:107
msgid "`Using a Custom TensorFlow Model with Java <https://github.com/FIRST-Tech-Challenge/FtcRobotController/wiki/Using-a-Custom-TensorFlow-Model-with-Java>`__"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:110
msgid "These tutorials use examples from a previous season (Skystone), but the process remains generally valid for Freight Frenzy."
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:114
msgid "Detecting Everyday Objects"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:116
msgid "You can use a pretrained TensorFlow Lite model to detect **everyday objects**, such as a clock, person, computer mouse, or cell phone. The following advanced tutorial shows how you can use a free, pretrained model to recognize numerous everyday objects."
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:121
msgid "`Using a TensorFlow Pretrained Model to Detect Everyday Objects <https://github.com/FIRST-Tech-Challenge/FtcRobotController/wiki/Using-a-TensorFlow-Pretrained-Model-to-Detect-Everyday-Objects>`__"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:129
msgid "TensorFlow Lite Demo"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:129
msgid "TensorFlow can recognize everyday objects"
msgstr ""

#: programming_resources/vision/tensorflow_ff_2021/tensorflow-ff-2021.rst:135
msgid "Updated 11/19/21"
msgstr ""
